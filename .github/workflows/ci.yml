name: React Cypress Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Yerleşik npm önbelleğini etkinleştirir

    # Kök NPM bağımlılıklarını önbelleğe alma
    - name: Cache Root NPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.npm
        key: ${{ runner.os }}-node-root-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-root-

    # Cypress ikili dosyasını önbelleğe alma
    - name: Cache Cypress binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/Cypress
        key: cypress-binary-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          cypress-binary-${{ runner.os }}-

    # Kök Bağımlılıklarını Kurma
    - name: Install Root dependencies
      run: |
        npm ci --legacy-peer-deps
        npx cypress verify
      working-directory: .

    # React Uygulaması NPM bağımlılıklarını önbelleğe alma
    - name: Cache React App NPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          cypress-react-app/node_modules
          cypress-react-app/.npm
        key: ${{ runner.os }}-node-react-${{ hashFiles('cypress-react-app/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-react-

    # React Uygulaması Bağımlılıklarını Kurma
    - name: Install React App dependencies
      run: npm ci --legacy-peer-deps
      working-directory: cypress-react-app

    # cypress-react-app/public dizinini listele (Tanılama)
    - name: List cypress-react-app/public Directory
      run: ls -la
      working-directory: cypress-react-app

    # public dizininde index.html dosyasını kontrol et (Tanılama)
    - name: Check for index.html
      run: |
        if [ ! -f "index.html" ]; then
          echo "index.html dosyası bulunamadı!"
          exit 1
        fi
      working-directory: cypress-react-app/public

    # React Uygulamasını Derleme
    - name: Build React app
      run: npm run build
      working-directory: cypress-react-app
      env:
        CI: true

    # React Geliştirme Sunucusunu Başlatma
    - name: Start development server
      run: |
        npm run start &
        npx wait-on http://localhost:3000
      working-directory: cypress-react-app
      env:
        CI: true

    # Bileşen Testlerini Çalıştırma
    - name: Run Component Tests
      run: npx cypress run --component
      working-directory: .
      env:
        CI: true

    # E2E Testlerini Çalıştırma
    - name: Run E2E Tests
      run: npx cypress run --e2e
      working-directory: .
      env:
        CI: true

    # Test Sonuçlarını Yükleme
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results
        path: |
          cypress-react-app/cypress/videos
          cypress-react-app/cypress/screenshots
          cypress-react-app/cypress/reports
        retention-days: 30

    # Hata Durumunda Screenshot'ları Yükleme
    - name: Upload Failure Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-screenshots
        path: cypress-react-app/cypress/screenshots
        retention-days: 5
